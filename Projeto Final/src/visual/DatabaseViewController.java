package visual;

import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;

public class DatabaseViewController extends javax.swing.JFrame {
    private String selectedItem = null;
    
    private static final int n_queries = 20;
    private static final String[] procedures = {"limpar", "criação e inserção"};
    
    DatabaseModel model = null;
    
    /**
     * Creates new form InquirerView
     */
    public DatabaseViewController() throws Exception {
        model = new DatabaseModel();
	initComponents();
	populateListQuery();
    }

    private void populateListQuery() {
	String[] query_items = new String [n_queries + procedures.length];
	
	for(int i = 0; i < procedures.length; i++) {
	    query_items[i] = procedures[i];
	}
	for(int i = procedures.length; i < query_items.length; i++) {
	    query_items[i] = "Consulta #" + String.valueOf(i - 1);
	}
	
	this.listQuery.setListData(query_items);
	this.listQuery.setSelectedIndex(0);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        textAreaResult = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        listQuery = new javax.swing.JList();
        buttonRun = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        textAreaResult.setEditable(false);
        textAreaResult.setColumns(20);
        textAreaResult.setRows(5);
        textAreaResult.setText("RETORNO DA CONSULTA\n");
        jScrollPane1.setViewportView(textAreaResult);

        listQuery.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        listQuery.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listQuery.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listQueryValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(listQuery);

        buttonRun.setText("Executar");
        buttonRun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRunActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2)
                    .addComponent(buttonRun, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 360, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonRun, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonRunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRunActionPerformed
	try {
	    if(selectedItem.compareTo(procedures[0]) == 0) {
		model.clearDatabase();
		this.textAreaResult.setText("Base de dados limpa.");
	    } else if (selectedItem.compareTo(procedures[1]) == 0) {
		model.createDatabase();
		this.textAreaResult.setText("Base de dados criada.");
	    } else {
		ArrayList<String> results = model.query(listQuery.getSelectedIndex() - 2);
		String text = "";
		for (String line : results) {
		    text += line + '\n';
		}
		this.textAreaResult.setText(text);
	    }
	} catch (Exception ex) {
	    Logger.getLogger(DatabaseViewController.class.getName()).log(Level.SEVERE, null, ex);
	    this.textAreaResult.setText(("Um erro ocorreu!"));
	}
    }//GEN-LAST:event_buttonRunActionPerformed

    private void listQueryValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listQueryValueChanged
        selectedItem = (String)listQuery.getSelectedValue();
    }//GEN-LAST:event_listQueryValueChanged

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
	try {
	    model.closeConnections();
	} catch (Exception ex) {
	    Logger.getLogger(DatabaseViewController.class.getName()).log(Level.SEVERE, null, ex);
	}
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DatabaseViewController.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DatabaseViewController.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DatabaseViewController.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DatabaseViewController.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
		try {
		    new DatabaseViewController().setVisible(true);
		} catch (Exception ex) {
		    Logger.getLogger(DatabaseViewController.class.getName()).log(Level.SEVERE, null, ex);
		}
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonRun;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList listQuery;
    private javax.swing.JTextArea textAreaResult;
    // End of variables declaration//GEN-END:variables
}
